function [fof2,hdr]=cadiread(fname)

fname='/Volumes/AMISR_010/Resolute CADI/9D240200.md2';

fid=fopen(fname,'r','l');
hdr=readhdr(fid);
while ~feof(fid)
    [x,y]=readbuf(fid,hdr);
end
fof2=findfof2(x,y);
timestamp=NaN;


return

function hdr=readhdr(fid)

timestamp=fread(fid,25,'schar'); timestamp=char(timestamp)' % station and timestamp
filetype=fread(fid,1,'schar'); filetype=char(filetype); % I=individual, H=hourly
numfreq=fread(fid,1,'short'); % number of frequencies
dopp=fread(fid,1,'uchar'); % doppler series length
minht=fread(fid,1,'short'); % minimum height
maxht=fread(fid,1,'short'); % maximum height
pps=fread(fid,1,'uchar'); % pulses per sec
navg=fread(fid,1,'uchar'); % # of pulses averaged
basethreshold=fread(fid,1,'short'); % 100 x minpower (bits sq.) before save
noisethreshold=fread(fid,1,'short'); % 100 x mult for avg noise power
mindopp=fread(fid,1,'uchar'); % min number of dopplers before saving
secbwsamp=fread(fid,1,'short'); % sec between samples
gaincontrol=fread(fid,1,'schar'); gaincontrol=char(gaincontrol); % 'N'=none, or a number
sigprocess=fread(fid,1,'schar'); sigprocess=char(sigprocess); % F=FFT, T=timeseq, N=None
numrec=fread(fid,1,'uchar'); % number of receivers
spares=fread(fid,11,'uchar'); % spares
freq=fread(fid,numfreq,'float'); % frequencies

site=timestamp(1:3);
date=timestamp(5:10);
hour=str2num(timestamp(12:13));
min=str2num(timestamp(15:16));
sec=str2num(timestamp(18:19));
yr=str2num(timestamp(21:24));

hdr=struct('TimeStamp',timestamp,'filetype',filetype,'NumFreqs',numfreq,...
    'DoppSerLen',dopp,'minHt',minht,'maxHt',maxht,'PulsesPerSec',pps,'nAvg',navg,...
    'BaseThreshold',basethreshold,'NoiseThreshold',noisethreshold,'minDopp',mindopp,...
    'secBWsamp',secbwsamp,'GainControl',gaincontrol,'SigProcess',sigprocess,...
    'NumReceivers',numrec,'Spares',spares,'Frequencies',freq,...
    'Site',site,);

function [x,y]=readbuf(fid,hdr)

dh=3.0;

figure; hold on; xlabel('Frequency (MHz)'); ylabel('~Altitude (km)'); title(hdr.TimeStamp); axis([0 15 hdr.minHt hdr.maxHt]); set(gca,'xtick',[0:1:15]); grid on; grid minor;

time_min=fread(fid,1,'uint8');
time_sec=fread(fid,1,'uint8');

flag=1; jpt=0; ipt=1; ifreq=0;
while flag
    gainflag=fread(fid,1,'uint8');
    if gainflag==255  % end of frequencies
        flag=0;
    elseif gainflag>224 & gainflag<239 % have frequency marker
        if jpt>0
            for l=1:jpt
                sig(ipt-l)=m2^0.25;
            end
        end
        jpt=0; m1=0; m2=0;
        noiseflag=fread(fid,1,'uint8');
        noise=fread(fid,1,'uint16');
        ifreq=ifreq+1;
    else % have height marker
        hnum=gainflag;
        tnum=fread(fid,1,'uint8');
        
        for l=1:tnum
            dnum=fread(fid,1,'uint8'); % doppler bin number
            
            powr=0;
            for ii=1:hdr.NumReceivers
                samp=fread(fid,1,'uint8') + j*fread(fid,1,'uint8');
                powr=powr+samp*conj(samp);
            end
            powr=powr/hdr.NumReceivers;

            f=hdr.Frequencies(ifreq+1)/1.0e6;
            h=hnum*dh;
            if powr>0
                p=log10((powr));
                plotpoint(p,f,h);

                if f>=2.5 & p>0
                    x(ipt)=f;
                    y(ipt)=h;
                    ipt=ipt+1;
                    jpt=jpt+1;
                end
            end
        end
    end
end

function fof2=findfof2(x,y)

% stalt=250; dalt=10;
%
% i=1; k=1;
% while i<=length(x)
%     if x(i)>0
%         curfr=x(i); curalt=y(i);
%         j=1;
%             while i+j<length(x) & x(i+j)==x(i)
%                 if y(i+j)>curalt
%                     curalt=y(i+j);
%                 end
%                 j=j+1;
%             end
%         nfr(k)=curfr;
%         nalt(k)=curalt;
%         k=k+1;
%     end
%     i=i+j+1;
% end
%
% I=find(nalt>stalt);
% nalt=nalt(I); nfr=nfr(I);
%
% I=find(nfr>mean(nfr));
% nalt=nalt(I); nfr=nfr(I);
%
% if length(nfr)<2
%     fof2=NaN;
%     return;
% end
%
% for i=2:length(nalt)
%     if nalt(i)<nalt(i-1)
%         nalt(i)=NaN; nfr(i)=NaN;
%     end
% end
% I=find(~isnan(nalt)); nalt=nalt(I); nfr=nfr(I);
%
% fof2=mean(nfr);
% I1=find(nfr<fof2); I2=find(nfr>fof2);
% lhssum=length(I1); rhssum=length(I2);
% while rhssum/lhssum>0.1
%     stalt=stalt+dalt;
%     I=find(nalt>stalt);
%     nalt=nalt(I); nfr=nfr(I);
%     I=find(nfr>mean(nfr));
%     nalt=nalt(I); nfr=nfr(I);
%     if length(nfr)>2
%         fof2=mean(nfr);
%         I1=find(nfr<fof2); I2=find(nfr>fof2);
%         lfssum=length(I1); rhssum=length(I2);
%     else
%         break;
%     end
% end
%
% plot([fof2 fof2],[100 600],'--k');


cutoff=0.15;

i=1; k=1;
while i<=length(x)
    if x(i)>0
        curfr=x(i); curalt=y(i);
        j=1;
        while i+j<length(x) & x(i+j)==x(i)
            if y(i+j)>curalt
                curalt=y(i+j);
            end
            j=j+1;
        end
        nfr(k)=curfr;
        nalt(k)=curalt;
        k=k+1;
    end
    i=i+j+1;
end

%plot(nfr,nalt,'r');

if length(nfr)<2
    fof2=NaN;
    return;
end

stttilll=1; kprev=0;
while stttilll
    gnalt=gradient(nalt);
    I=find(abs(gnalt)>10); %5*median(abs(gnalt)));
    nalt(I)=NaN; nfr(I)=NaN;
    %plot(nfr,nalt,'g');
    %return
    k=length(nalt);
    for i=k:-1:2
        if nalt(i)<nalt(i-1)
            nalt(i)=NaN; nfr(i)=NaN;
        end
    end
    I=find(~isnan(nalt)); nalt=nalt(I); nfr=nfr(I);
    if kprev==k
        stttilll=0;
    end
    kprev=k;
    %    stttilll=0;
end

%plot(nfr,nalt);

if length(nfr)<2
    fof2=NaN;
    return;
end

while nfr(end)-nfr(end-1)>cutoff | nfr(end)<nfr(end-1)
    nfr=nfr(1:end-1); nalt=nalt(1:end-1);
end

if length(nfr)<2
    fof2=NaN;
    return;
end

fof2=nfr(end);
plot([fof2 fof2],[100 600],'--k');

function plotpoint(p,f,h)

symbols=strvcat('.y','.c','.g','.m','.r','.b','.k');
tt=round(p);
if tt>size(symbols,1)-1
    tt=size(symbols,1)-1;
end
plot(f,h,symbols(tt+1,:));