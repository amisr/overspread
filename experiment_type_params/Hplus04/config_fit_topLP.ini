# This config file for fitting parameters and other options

[DEFAULT]

INTEG=10min

[FIT_OPTIONS]

DO_FITS=1

# Number of records to integrate in time (seconds)
Recs2integrate=60.0*10

# beamcodes to do 
Beams2do=[]

# whether to use median estimate
procMedian=1

# These are scaling parameters
p_N0=1.0e11
p_T0=1000.00
p_M0=16.0

# 50% transition height in km
z50=140.0

# Important - summation rule for fitter (assumes this will resolve range ambiguities)
SUMMATION_RULE=[[-25, -26, -26, -27, -27, -28, -28, -29, -29, -30, -30, -31, -31, -32, -32, -33, -33, -34, -34, -35, -35, -36, -36, -37, -37, -38, -38, -39, -39, -40, -40, -41, -41, -42, -42, -43, -43, -44, -44, -45, -45, -46, -46, -47, -47, -48, -48, -49, -49, -50, -50, -51, -51, -52, -52, -53, -53, -54, -54, -55, -55, -56, -56, -57, -57, -58, -58, -59, -59, -60, -60, -61, -61, -62, -62, -63, -63, -64, -64, -65, -65, -66, -66, -67, -67, -68, -68, -69, -69, -70, -70, -71, -71, -72, -72, -73, -73, -74, -74, -75, -75, -76, -76, -77, -77, -78, -78, -79, -79, -80, -80, -81, -81, -82, -82, -83, -83, -84, -84, -85, -85, -86, -86, -87, -87, -88, -88, -89], [24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 54, 54, 55, 55, 56, 56, 57, 57, 58, 58, 59, 59, 60, 60, 61, 61, 62, 62, 63, 63, 64, 64, 65, 65, 66, 66, 67, 67, 68, 68, 69, 69, 70, 70, 71, 71, 72, 72, 73, 73, 74, 74, 75, 75, 76, 76, 77, 77, 78, 78, 79, 79, 80, 80, 81, 81, 82, 82, 83,83, 84, 84, 85, 85, 86, 86, 87, 87]]

# This tells us which lags to fit
Lags2fit=[[0.0e3,64]]
fit0lag=1

# Min and max altitude to fit within
htmin=200e3
htmax=1000e3

Ngroup=2
NION=3

GroupHt=[300e3,htmax]

mi=[16.0,30.5,1.0]

Ifit=[[[-1,1,-2,1],[-2,-1,-2,-1],[0,0,0,0],[0,1,-2,-1]],[[-1,1,0,1],[0,0,0,0],[1,-1,0,-1],[0,1,0,-1]]]


#
# Example 1. Just fit for Te and Ti for 1 species (O+) at all altitudes
#
# Number of groups and ions
#Ngroup=1
#NION=1
#
# The ending altitudes of each of the groups 
#GroupHt=[htmax]
# Ion masses, must have of a length of NION
#mi=[16.0]
#
# Ifit tells the program what parameters to fit for - 
# a 3-d array (Ngroups x (NION+1) x 4) where the columns are: fraction, temperature, collision frequency, velocity
# 0 = do not fit, 1 = fit, -1 = force to be equal (in the case of ion fraction, this means sum to 1), -2 = get from the model
# the last row is always the electrons
#Ifit=[[[0,1,-2,1],[0,1,-2,-1]]]

#
# Example 2. Fit for Te and Ti for 1 species (O+) but use the molecular fraction from a model. Force the temperature and drift of all ions to be the same.
#
# Number of groups and ions
##Ngroup=1
##NION=2 
#
# The ending altitudes of each of the groups 
##GroupHt=[htmax]
# Ion masses, must have of a length of NION
##mi=[16.0,30.5]
#
# Ifit tells the program what parameters to fit for - 
# a 3-d array (Ngroups x (NION+1) x 4) where the columns are: fraction, temperature, collision frequency, velocity
# 0 = do not fit, 1 = fit, -1 = force to be equal (in the case of ion fraction, this means sum to 1), -2 = get from the model
# the last row is always the electrons
##Ifit=[[[-1,1,0,1],[-2,-1,0,-1],[0,1,0,-1]]]

#
# Example 3. Fit for Te and Ti for 1 species (O+) up to a certain altitude using the molecular fraction from a model. At a higher altitude, fit for light ion composition. Force the temperature and drift of all ions to be the same.
#
# Number of groups and ions
##Ngroup=2
##NION=3
#
# The ending altitudes of each of the groups 
##GroupHt=[400e3,htmax]
# Ion masses, must have of a length of NION
##mi=[16.0,30.5,1.0]
#
# Ifit tells the program what parameters to fit for - 
# a 3-d array (Ngroups x (NION+1) x 4) where the columns are: fraction, temperature, collision frequency, velocity
# 0 = do not fit - force 0, 1 = fit, -1 = force to be equal (in the case of ion fraction, this means sum to 1), -2 = get from the model
# the last row is always the electrons
##Ifit=[[[-1,1,0,1],[-2,-1,0,-1],[0,0,0,0],[0,1,0,-1]],[[1,1,0,1],[0,0,0,0],[-1,-1,0,-1],[0,1,0,-1]]]



		

