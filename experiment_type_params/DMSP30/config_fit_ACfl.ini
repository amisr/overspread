# This config file for fitting parameters and other options

[DEFAULT]

INTEG=5min

[FIT_OPTIONS]

DO_FITS=1

# Number of records to integrate in time
Recs2integrate=60.0*5

procMedian=1

# These are scaling parameters
p_N0=1.0e11
p_T0=1000.00
p_M0=16.0

# Important - summation rule for fitter (assumes this will resolve range ambiguities)
SUMMATION_RULE=[[scipy.zeros(76)-2,scipy.zeros(76)],[scipy.zeros(76)-3,scipy.zeros(76)+2],[scipy.zeros(76)-6,scipy.zeros(76)+5],[scipy.zeros(76)-9,scipy.zeros(76)+8]]

# This tells us which lags to fit
#Lags2fit=[[0.0e3,75]]
fit0lag=1 # whether to fit the 0 lag
uselag1=1 # for density

# Min and max altitude to fit within
htmin=80e3
htmax=350e3
		
Ngroup=4
NION=5

molecularModel=1

# O+, O2+, NO+, N2+, N+
mi=[16.0,32.0,30.0,28.0,14.0]

GroupHt=[120e3,150e3,200e3,htmax]
Ifit=[
	[[-1,1,-2,1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[0,-1,-2,-1]],
	[[-1,1,-2,1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[0,1,-2,-1]],
	[[-1,1,-2,1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[0,1,-2,-1]],
	[[-1,1,-2,1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[-2,-1,-2,-1],[0,1,-2,-1]]
	]

#
# Example 1. Just fit for Te and Ti for 1 species (O+) at all altitudes
#
# Number of groups and ions
#Ngroup=1
#NION=1
#
# The ending altitudes of each of the groups 
#GroupHt=[htmax]
# Ion masses, must have of a length of NION
#mi=[16.0]
#
# Ifit tells the program what parameters to fit for - 
# a 3-d array (Ngroups x (NION+1) x 4) where the columns are: fraction, temperature, collision frequency, velocity
# 0 = do not fit, 1 = fit, -1 = force to be equal (in the case of ion fraction, this means sum to 1), -2 = get from the model
# the last row is always the electrons
#Ifit=[[[0,1,0,1],[0,1,0,-1]]]

#
# Example 2. Fit for Te and Ti for 1 species (O+) but use the molecular fraction from a model. Force the temperature and drift of all ions to be the same.
#
# Number of groups and ions
##Ngroup=1
##NION=2 
#
# The ending altitudes of each of the groups 
##GroupHt=[htmax]
# Ion masses, must have of a length of NION
##mi=[16.0,30.5]
#
# Ifit tells the program what parameters to fit for - 
# a 3-d array (Ngroups x (NION+1) x 4) where the columns are: fraction, temperature, collision frequency, velocity
# 0 = do not fit, 1 = fit, -1 = force to be equal (in the case of ion fraction, this means sum to 1), -2 = get from the model
# the last row is always the electrons
##Ifit=[[[-1,1,0,1],[-2,-1,0,-1],[0,1,0,-1]]]

#
# Example 3. Fit for Te and Ti for 1 species (O+) up to a certain altitude using the molecular fraction from a model. At a higher altitude, fit for light ion composition. Force the temperature and drift of all ions to be the same.
#
# Number of groups and ions
##Ngroup=2
##NION=3
#
# The ending altitudes of each of the groups 
##GroupHt=[400e3,htmax]
# Ion masses, must have of a length of NION
##mi=[16.0,30.5,1.0]
#
# Ifit tells the program what parameters to fit for - 
# a 3-d array (Ngroups x (NION+1) x 4) where the columns are: fraction, temperature, collision frequency, velocity
# 0 = do not fit - force 0, 1 = fit, -1 = force to be equal (in the case of ion fraction, this means sum to 1), -2 = get from the model
# the last row is always the electrons
##Ifit=[[[-1,1,0,1],[-2,-1,0,-1],[0,0,0,0],[0,1,0,-1]],[[1,1,0,1],[0,0,0,0],[-1,-1,0,-1],[0,1,0,-1]]]



		

