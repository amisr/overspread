#!/bin/sh
# The madtclsh path is longer than 32 characters. So, we take advantage
# of the fact that a backslash continues a comment line in tcl \
exec MADROOT/bin/madtclsh "$0" ${1+"$@"}

# $Id: printCedarRecords,v 1.7 2008/07/29 15:47:27 brideout Exp $

# printCedarRecord prints specified records of a CEDAR file.  The file
# may be any of the 5 supported CEDAR formats (Madrigal, Blocked
# Binary, Cbf, Unblocked Binary or ASCII"), and may include any mixture
# of prologue, header and data records. The format of the file is
# determined automatically.

# Usage: printCedarRecords filename firstRecord lastRecord

lappend auto_path MADROOT/madtcllib
package require mtl

madrigal madrigal
set madroot [madrigal cget -madroot]
set env([string toupper madroot]) $madroot

# Get parameter codes
cedarCode cedarCode

# Get number of parameters
set nargs $argc
if {$nargs != 3} {
    puts {Usage: printCedarRecords filename firstRecord lastRecord}
    exit
}

# Get file name and record number from the argument list
set infile [lindex $argv 0]
set rec1 [lindex $argv 1]
set rec2 [lindex $argv 2]

# Create madrec object for the input file. Specify file type 1 for automatic
# determination of the CEDAR file type
mad madin
set status [catch {$madin open 1 $infile}]
if {$status != 0} {
    puts "mad open Error: [$madin get error]"
    exit
}
    
# Get the first rec1- records
set n $rec1
for {set i 0} {$i < [expr $n-1]} {incr i} {
    $madin getNextRecord
}

# Print the specified records
for {set i 0} {$i <= [expr $rec2-$rec1]} {incr i} {
    if {[set status [$madin getNextRecord]] != 0} {
        puts EOF
        break
    }
    puts "Record [expr $i+$rec1]:"
    $madin printRecord
    puts " "
    puts " "
}

# Close file and delete madrec object
$madin close
$madin destroy
