# Loops over all html files in the Madrigal distribution and edits them
# to use the site-specific definitions in madrigal.cfg. Copies these and
# other documentation, images and icons to the proper Web site directories.

# usage: tclsh configureHtml

# $Id: configureHtml,v 1.26 2009/04/21 21:11:06 brideout Exp $

# Parse madrigal.cfg
set fc [open madrigal.cfg r]
while {[gets $fc line] >= 0} {

    if {[regexp -- ^# $line] || [string length $line] == 0} {continue}

    scan $line "%s %s %s" name equals value

    if {$name == "MADROOT"} {
        set madroot [string range $line [string first $value $line] end]
    } elseif {$name == "MADSERVERCGI"} {
        set madservercgi [string range $line [string first $value $line] end]
    } elseif {$name == "MADSERVERROOT"} {
        set madserverroot [string range $line [string first $value $line] end]
    } elseif {$name == "MADSERVERDOCABS"} {
        set madserverdocabs [string range $line [string first $value $line] end]
    } elseif {$name == "HTMLSTYLE"} {
        set htmlstyle [string range $line [string first $value $line] end]
    } elseif {$name == "INDEXHEAD"} {
        set indexhead [string range $line [string first $value $line] end]
    } elseif {$name == "CONTACT"} {
        set contact [string range $line [string first $value $line] end]
    } elseif {$name == "SITEID"} {
        set siteid [string range $line [string first $value $line] end]
    }
}
close $fc

# Parse metadata/siteTab.txt to get the site name
set fsite [open metadata/siteTab.txt r]
while {[gets $fsite line] >= 0} {
    set items [split $line ,]
    if {[llength $line] < 3} {
        continue
    }
    if {[lindex $items 0] == $siteid} {
        set sitename [lindex $items 1]
	break
    } 
}
close $fsite

puts "MADROOT = $madroot"
puts "MADSERVERCGI = $madservercgi"
puts "MADSERVERROOT = $madserverroot"
puts "MADSERVERDOCABS = $madserverdocabs"
puts "HTMLSTYLE = $htmlstyle"
puts "INDEXHEAD = $indexhead"
puts "CONTACT = $contact"
puts "SITEID = $siteid"
puts "SITENAME = $sitename"

# Create the document directory
file mkdir $madserverdocabs
file mkdir [file join $madserverdocabs icons]

# Process index.html

# see if the admin wants to add extra html to index
set result [catch { set fs [open siteIndex.html r] }]
if { $result == 0 } {
    set site_index [read $fs]
} else {
    set site_index ""
}


set fpl [open doc/index.html]
set fpn [open $madserverdocabs/index.html w]
puts "Processing index.html"
while {[gets $fpl line] >= 0} {
    if {[string match "<CENTER><H2>" $line] == 1} {
        puts $fpn "<CENTER><H2>"
        puts $fpn $indexhead
        puts $fpn "</H2></CENTER>"
        gets $fpl line
        gets $fpl line    
    } elseif {[string match "<BODY*" $line] == 1} {
        puts $fpn $htmlstyle
    } elseif {[string match "<SITE_INDEX>*" $line] == 1} {
        puts $fpn $site_index
    } elseif {[string match "*MADSERVERCGI*" $line] == 1} {
        regsub "MADSERVERCGI" $line $madservercgi line
        puts $fpn $line
    } elseif {[string match "*<A HREF=\"MAILTO*" $line] == 1} {
        puts $fpn $contact
    } else {
        puts $fpn $line
    }
}
close $fpl
close $fpn

puts "Copying doc/madpyDoc to $madserverdocabs"
exec cp -r doc/madpyDoc $madserverdocabs

puts "Copying doc/siteSpecific/* to $madserverdocabs"
exec cp -r doc/siteSpecific $madserverdocabs


# Process all html pages
set fp [open MANIFEST r]
while {[gets $fp f] >= 0} {
    if {[string match "*.html" $f] && $f != "doc/index.html"} {
        puts "Processing $f"
        set fpl [open $f r]
            set nlines 0
        while {[gets $fpl line] >= 0} {
            if {[string match "*<BODY*" $line] == 1 || [string match "*<body*" $line] == 1} {
                set nlines [expr $nlines + 1]
                if {$nlines == 1} {
                    puts $f
                }
                puts "    $line"
            }

        }
        close $fpl
            if {$nlines >= 1} {
            set fpl [open $f r]
            set fpn [open [file join $madserverdocabs [string range $f 4 end]] w]
            puts "    Inserting new definitions in $f"
            while {[gets $fpl line] >= 0} {
            
                if {[string match "*<BODY*" $line] == 1 || [string match "*<body*" $line] == 1} {
                    puts $fpn $htmlstyle
                } elseif {[string match "*MADSERVERCGI*" $line] == 1} {
                    regsub "MADSERVERCGI" $line $madservercgi line
                    puts $fpn $line
		} elseif {[string match "*MADSERVERROOT*" $line] == 1} {
                    regsub "MADSERVERROOT" $line $madserverroot line
                    puts $fpn $line
		} elseif {[string match "*SITENAME*" $line] == 1} {
                    regsub "SITENAME" $line $sitename line
                    puts $fpn $line
                } else {
                   puts $fpn $line
                }
            }
            close $fpl
            close $fpn
        }

    }
}
close $fp

# Process siteSpecific.html
# if doesn't yet exist, create it by copying siteSpecific_template.html
if {[file exists doc/siteSpecific.html] == 0} {
    file copy doc/siteSpecific_template.html doc/siteSpecific.html
}
set fpl [open doc/siteSpecific.html]
set fpn [open $madserverdocabs/siteSpecific.html w]
puts "Processing siteSpecific.html"
while {[gets $fpl line] >= 0} {
    if {[string match "*<BODY*" $line] == 1 || [string match "*<body*" $line] == 1} {
        puts $fpn $htmlstyle
    } elseif {[string match "*MADSERVERCGI*" $line] == 1} {
        regsub "MADSERVERCGI" $line $madservercgi line
        puts $fpn $line
    } elseif {[string match "*SITENAME*" $line] == 1} {
        regsub "SITENAME" $line $sitename line
        puts $fpn $line
    } else {
        puts $fpn $line
    }
}
close $fpl
close $fpn



# Process other documentation, images and icons    set fp [open MANIFEST r]


puts "Copying doc/*.pdf to $madserverdocabs"
eval file copy -force [glob doc/*.pdf] $madserverdocabs

puts "Copying doc/*.css to $madserverdocabs"
eval file copy -force [glob doc/*.css] $madserverdocabs

puts "Copying icons/*.* to $madserverdocabs/icons"
eval file copy -force [glob icons/*.*] [file join $madserverdocabs icons]

puts "Copying doc/tempReports to $madserverdocabs"
exec cp -r doc/tempReports $madserverdocabs

puts "Changing $madserverdocabs/tempReports to be world writable"
catch { exec chmod 777 $madserverdocabs/tempReports }

puts "Making link to experiments directory in $madserverdocabs"
exec ln -s -f [file join $madroot experiments] $madserverdocabs
